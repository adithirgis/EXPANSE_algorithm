# To be used after running 1_modelsForMultipleYears.R
library(sp)
library(raster)
library(tmap)
library(tmaptools)
library(dplyr)
library(GWmodel)
source('scr/fun_usefulFunctions.R')
EU_data <- read.csv('data/pred_NO2.csv') %>% na.omit()
EU_data <- EU_data[with(EU_data, Year==2010), ]
pred <- list(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
pred_c <- c(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
neg_pred <- c('alt10_enh', 'clc14', 'clc7')
station_info <- c('airid', 'Year', 'country_is', 'type_of_st', 'Xcoord', 'Ycoord',
'REGION', 'strata_run5', 'country_full')
EU_data <- EU_data %>% mutate_at(EU_data %>% dplyr::select(matches(neg_pred)) %>% names(),
function(x) -x)
EU_data <- read.csv('../data/pred_NO2.csv') %>% na.omit()
EU_data <- EU_data[with(EU_data, Year==2010), ]
pred <- list(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
pred_c <- c(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
neg_pred <- c('alt10_enh', 'clc14', 'clc7')
station_info <- c('airid', 'Year', 'country_is', 'type_of_st', 'Xcoord', 'Ycoord',
'REGION', 'strata_run5', 'country_full')
EU_data <- EU_data %>% mutate_at(EU_data %>% dplyr::select(matches(neg_pred)) %>% names(),
function(x) -x)
tt <- gen_train_test(EU_data, 123, 0.8)
source('fun_usefulFunctions.R')
EU_data <- read.csv('../data/pred_NO2.csv') %>% na.omit()
EU_data <- EU_data[with(EU_data, Year==2010), ]
pred <- list(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
pred_c <- c(c('alt10_enh','Xcoord', 'Ycoord', 'XY'),
'clc10',
'clc14',
'clc3',
'clc5',
'clc7',
'MAJRDS_EU',
'ROADS_EU',
c('no2_10MACC', 'PM25_10_MACC','no2_10SAT', 'PM25_10_SAT'),
'RES')
neg_pred <- c('alt10_enh', 'clc14', 'clc7')
station_info <- c('airid', 'Year', 'country_is', 'type_of_st', 'Xcoord', 'Ycoord',
'REGION', 'strata_run5', 'country_full')
EU_data <- EU_data %>% mutate_at(EU_data %>% dplyr::select(matches(neg_pred)) %>% names(),
function(x) -x)
tt <- gen_train_test(EU_data, 123, 0.8)
train_data <- tt[[3]]
test_data <- tt[[4]]
train_data <- train_data[, c('MAJRDS_EU_10p', 'NO2',
'Xcoord', 'Ycoord')]
test_data <- test_data[, c('MAJRDS_EU_10p', 'NO2',
'Xcoord', 'Ycoord')]
train_data$MAJRDS_EU_10p <- scale(train_data$MAJRDS_EU_10p)
train_data$NO2 <- scale(train_data$NO2)
mean(train_data$MAJRDS_EU_10p)
sd(train_data$MAJRDS_EU_10p)
mean(train_data$NO2)
sd(train_data$NO2)
test_data$MAJRDS_EU_10p <- scale(test_data$MAJRDS_EU_10p)
test_data$NO2 <- scale(test_data$NO2)
local_crs <- CRS("+init=EPSG:3035")
sp_train <- sp::SpatialPointsDataFrame(data = train_data,
coords = cbind(train_data$Xcoord, train_data$Ycoord),
proj4string = local_crs)
sp_test <- sp::SpatialPointsDataFrame(data = test_data,
coords = cbind(test_data$Xcoord, test_data$Ycoord),
proj4string = local_crs)
names(sp_train)
colours = c("dark blue", "blue", "red", "dark red")
# EDA
linmod <- lm(NO2~MAJRDS_EU_10p,data=sp_train) # Store the regression model to use in a plot later
grd2 <- SpatialGrid(GridTopology(c(xmin,ymin),
c(cellsize,cellsize),
c(floor((xmax-xmin)/cellsize)+2,floor((ymax-ymin)/cellsize)+2)))
sp_train
xmin <- sp_train@bbox[1, 1]
ymin <- sp_train@bbox[2, 1]
xmax <- sp_train@bbox[1, 2]
ymax <- sp_train@bbox[2, 2]
cellsize <- 200000
grd2 <- SpatialGrid(GridTopology(c(xmin,ymin),
c(cellsize,cellsize),
c(floor((xmax-xmin)/cellsize)+2,floor((ymax-ymin)/cellsize)+2)))
# sp_train_c <- crop(sp_train, extent(c(xmin, (xmax+xmin)/2, ymin, (ymax+ymin)/2)))
# xmin <- sp_train_c@bbox[1, 1]
# ymin <- sp_train_c@bbox[2, 1]
# xmax <- sp_train_c@bbox[1, 2]
# ymax <- sp_train_c@bbox[2, 2]
# cellsize <- 200000
# grd2 <- SpatialGrid(GridTopology(c(xmin,ymin),
#                                  c(cellsize,cellsize),
#                                  c(floor((xmax-xmin)/cellsize)+2,floor((ymax-ymin)/cellsize)+2)))
#
plot(grd2)
plot(sp_train, pch=16, col='firebrick',add=TRUE)
DM <- gw.dist(dp.locat=coordinates(sp_train),
rp.locat=coordinates(grd2))
# basic GWR analysis
gwr.res <- gwr.basic(NO2~MAJRDS_EU_10p, data=sp_train,
regression.points=grd2, bw=50000000,
dMat=DM,kernel='exponential')
gwr.res
train_data <- tt[[3]]
test_data <- tt[[4]]
# basic GWR analysis
gwr.res <- gwr.basic(NO2~no2_10MACC+MAJRDS_EU_1p+Xcoord+ROADS_EUp+ROADS_EU_50p+RES_5,
data=sp_train,
regression.points=grd2, bw=50000000,
dMat=DM,kernel='exponential')
xmin <- sp_train@bbox[1, 1]
ymin <- sp_train@bbox[2, 1]
xmax <- sp_train@bbox[1, 2]
ymax <- sp_train@bbox[2, 2]
cellsize <- 200000
grd2 <- SpatialGrid(GridTopology(c(xmin,ymin),
c(cellsize,cellsize),
c(floor((xmax-xmin)/cellsize)+2,floor((ymax-ymin)/cellsize)+2)))
sp_train <- sp::SpatialPointsDataFrame(data = train_data,
coords = cbind(train_data$Xcoord, train_data$Ycoord),
proj4string = local_crs)
sp_test <- sp::SpatialPointsDataFrame(data = test_data,
coords = cbind(test_data$Xcoord, test_data$Ycoord),
proj4string = local_crs)
# basic GWR analysis
gwr.res <- gwr.basic(NO2~no2_10MACC+MAJRDS_EU_1p+Xcoord+ROADS_EUp+ROADS_EU_50p+RES_5,
data=sp_train,
regression.points=grd2, bw=50000000,
dMat=DM,kernel='exponential')
gwr.res
# basic GWR analysis
summary(lm(NO2~no2_10MACC+MAJRDS_EU_1p+Xcoord+ROADS_EUp+ROADS_EU_50p+RES_5, data=train_data))
#(the Spatial* object with the GWR results is in gwr.res$SDF - here the object is a SpatialPixelsDataFrame)
image(gwr.res$SDF,'no2_10MACC')
# image(gwr.res$SDF,'Intercept')
contour(gwr.res$SDF,'MAJRDS_EU_10p',lwd=1,add=TRUE)
# image(gwr.res$SDF,'Intercept')
contour(gwr.res$SDF,'no2_10MACC',lwd=1,add=TRUE)
